{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract DaiToken",
          "name": "_daiToken",
          "type": "address"
        },
        {
          "internalType": "contract DappToken",
          "name": "_dappToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract DaiToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dappToken",
      "outputs": [
        {
          "internalType": "contract DappToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStaking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdabcc967c0ff18558cd7d4e22f2239fd0d5fb32b3fa50424b3bff21c8368bc4a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "932518",
    "logsBloom": "0x
    "blockHash": "0x9e0fa1d16e9d8dd916842ae72f822edaac8c62e62d82910027087edb9b042d24",
    "transactionHash": "0xdabcc967c0ff18558cd7d4e22f2239fd0d5fb32b3fa50424b3bff21c8368bc4a",
    "logs": [],
    "blockNumber": 3,
    "cumulativeGasUsed": "932518",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
  ],
  "numDeployments": 1,
  "solcInputHash": "6f6e0416fdeb0f83a3391f7039ce8692",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract DaiToken\",\"name\":\"_daiToken\",\"type\":\"address\"},{\"internalType\":\"contract DappToken\",\"name\":\"_dappToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract DaiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dappToken\",\"outputs\":[{\"internalType\":\"contract DappToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStaking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenFarm.sol\":\"TokenFarm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dai.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract DaiToken {\\r\\n    string  public name = \\\"Mock DAI Token\\\";\\r\\n    string  public symbol = \\\"mDAI\\\";\\r\\n    uint256 public totalSupply = 1000000000000000000000000; // 1 million tokens\\r\\n    uint8   public decimals = 18;\\r\\n\\r\\n    event Transfer(\\r\\n        address indexed _from,\\r\\n        address indexed _to,\\r\\n        uint256 _value\\r\\n    );\\r\\n\\r\\n    event Approval(\\r\\n        address indexed _owner,\\r\\n        address indexed _spender,\\r\\n        uint256 _value\\r\\n    );\\r\\n\\r\\n    mapping(address => uint256) public balanceOf;\\r\\n    mapping(address => mapping(address => uint256)) public allowance;\\r\\n\\r\\n    constructor() {\\r\\n        balanceOf[msg.sender] = totalSupply;\\r\\n    }\\r\\n\\r\\n    function transfer(address _to, uint256 _value) public returns (bool success) {\\r\\n        require(balanceOf[msg.sender] >= _value);\\r\\n        balanceOf[msg.sender] -= _value;\\r\\n        balanceOf[_to] += _value;\\r\\n        emit Transfer(msg.sender, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function approve(address _spender, uint256 _value) public returns (bool success) {\\r\\n        allowance[msg.sender][_spender] = _value;\\r\\n        emit Approval(msg.sender, _spender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\r\\n        require(_value <= balanceOf[_from]);\\r\\n        require(_value <= allowance[_from][msg.sender], \\\"Not Approved to spend tokens\\\");\\r\\n        balanceOf[_from] -= _value;\\r\\n        balanceOf[_to] += _value;\\r\\n        allowance[_from][msg.sender] -= _value;\\r\\n        emit Transfer(_from, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x4b9749b6be8a4dea8c8bbc90d48391279fa3b86a13dfb86fb3f9a40ed91155e4\",\"license\":\"MIT\"},\"contracts/DappToken.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract DappToken {\\r\\n    string  public name = \\\"DApp Token\\\";\\r\\n    string  public symbol = \\\"DAPP\\\";\\r\\n    uint256 public totalSupply = 1000000000000000000000000; // 1 million tokens\\r\\n    uint8   public decimals = 18;\\r\\n\\r\\n    event Transfer(\\r\\n        address indexed _from,\\r\\n        address indexed _to,\\r\\n        uint256 _value\\r\\n    );\\r\\n\\r\\n    event Approval(\\r\\n        address indexed _owner,\\r\\n        address indexed _spender,\\r\\n        uint256 _value\\r\\n    );\\r\\n\\r\\n    mapping(address => uint256) public balanceOf;\\r\\n    mapping(address => mapping(address => uint256)) public allowance;\\r\\n\\r\\n    constructor() {\\r\\n        balanceOf[msg.sender] = totalSupply;\\r\\n    }\\r\\n\\r\\n    function transfer(address _to, uint256 _value) public returns (bool success) {\\r\\n        require(balanceOf[msg.sender] >= _value);\\r\\n        balanceOf[msg.sender] -= _value;\\r\\n        balanceOf[_to] += _value;\\r\\n        emit Transfer(msg.sender, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function approve(address _spender, uint256 _value) public returns (bool success) {\\r\\n        allowance[msg.sender][_spender] = _value;\\r\\n        emit Approval(msg.sender, _spender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\r\\n        require(_value <= balanceOf[_from]);\\r\\n        require(_value <= allowance[_from][msg.sender]);\\r\\n        balanceOf[_from] -= _value;\\r\\n        balanceOf[_to] += _value;\\r\\n        allowance[_from][msg.sender] -= _value;\\r\\n        emit Transfer(_from, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x71bc3579355b15c3d1032db3b81c6a8322b51e69fa832c199334901045fbb000\",\"license\":\"MIT\"},\"contracts/TokenFarm.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"./Dai.sol\\\";\\r\\nimport \\\"./DappToken.sol\\\";\\r\\n\\r\\ncontract TokenFarm {\\r\\n    DaiToken public daiToken;\\r\\n    DappToken public dappToken;\\r\\n    address public owner;\\r\\n\\r\\n    address[] public stakers;\\r\\n    mapping(address => uint) public stakingBalance;\\r\\n    mapping(address => bool) public isStaking;\\r\\n    mapping(address => bool) public hasStaked;\\r\\n\\r\\n    constructor(DaiToken _daiToken, DappToken _dappToken) {\\r\\n        daiToken = _daiToken;\\r\\n        dappToken = _dappToken;\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Caller must be the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function stake(uint256 _amount) public {\\r\\n        require(_amount > 0, \\\"Cannot stake Zero\\\");\\r\\n        daiToken.transferFrom(msg.sender, address(this), _amount);\\r\\n        stakingBalance[msg.sender] += _amount;\\r\\n        if (!hasStaked[msg.sender]) {\\r\\n            stakers.push(msg.sender);\\r\\n            hasStaked[msg.sender] = true;\\r\\n            isStaking[msg.sender] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function issueTokens() public onlyOwner {\\r\\n        for (uint i = 0; i < stakers.length; i++) {\\r\\n            address staker = stakers[i];\\r\\n            uint256 balance = stakingBalance[staker];\\r\\n            if (balance > 0) {\\r\\n                dappToken.transfer(staker, balance);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function unstake() public {\\r\\n        uint256 balance = stakingBalance[msg.sender];\\r\\n        require(balance > 0, \\\"You havent staked anything\\\");\\r\\n\\r\\n        daiToken.transfer(msg.sender, balance);\\r\\n        stakingBalance[msg.sender] = 0;\\r\\n        isStaking[msg.sender] = false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xaa59b3d3d18b8850716f786fa2608ead0ac4421dd2e9fe9d1ac0a7abc821f109\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010b2380380620010b28339818101604052810190620000379190620001c4565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200020b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001338262000106565b9050919050565b6000620001478262000126565b9050919050565b62000159816200013a565b81146200016557600080fd5b50565b60008151905062000179816200014e565b92915050565b60006200018c8262000126565b9050919050565b6200019e816200017f565b8114620001aa57600080fd5b50565b600081519050620001be8162000193565b92915050565b60008060408385031215620001de57620001dd62000101565b5b6000620001ee8582860162000168565b92505060206200020185828601620001ad565b9150509250929050565b610e97806200021b6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610135578063a694fc3a14610153578063be22f5461461016f578063c93c8f341461018d578063fd5e6dd1146101bd5761009e565b80632def6620146100a357806345bc78ab146100ad5780635eb186f8146100dd57806360ab5852146100fb5780636f49712b14610105575b600080fd5b6100ab6101ed565b005b6100c760048036038101906100c291906109a9565b6103b3565b6040516100d491906109ef565b60405180910390f35b6100e56103cb565b6040516100f29190610a69565b60405180910390f35b6101036103f1565b005b61011f600480360381019061011a91906109a9565b6105db565b60405161012c9190610a9f565b60405180910390f35b61013d6105fb565b60405161014a9190610ac9565b60405180910390f35b61016d60048036038101906101689190610b10565b610621565b005b6101776108c3565b6040516101849190610b5e565b60405180910390f35b6101a760048036038101906101a291906109a9565b6108e7565b6040516101b49190610a9f565b60405180910390f35b6101d760048036038101906101d29190610b10565b610907565b6040516101e49190610ac9565b60405180910390f35b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610bd6565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102cf929190610bf6565b6020604051808303816000875af11580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103129190610c4b565b506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60046020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890610cc4565b60405180910390fd5b60005b6003805490508110156105d8576000600382815481106104a7576104a6610ce4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156105c357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161057e929190610bf6565b6020604051808303816000875af115801561059d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c19190610c4b565b505b505080806105d090610d42565b915050610484565b50565b60056020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065b90610dd6565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106c193929190610df6565b6020604051808303816000875af11580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190610c4b565b5080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107549190610e2d565b92505081905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108c0576003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900460ff1681565b6003818154811061091757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109768261094b565b9050919050565b6109868161096b565b811461099157600080fd5b50565b6000813590506109a38161097d565b92915050565b6000602082840312156109bf576109be610946565b5b60006109cd84828501610994565b91505092915050565b6000819050919050565b6109e9816109d6565b82525050565b6000602082019050610a0460008301846109e0565b92915050565b6000819050919050565b6000610a2f610a2a610a258461094b565b610a0a565b61094b565b9050919050565b6000610a4182610a14565b9050919050565b6000610a5382610a36565b9050919050565b610a6381610a48565b82525050565b6000602082019050610a7e6000830184610a5a565b92915050565b60008115159050919050565b610a9981610a84565b82525050565b6000602082019050610ab46000830184610a90565b92915050565b610ac38161096b565b82525050565b6000602082019050610ade6000830184610aba565b92915050565b610aed816109d6565b8114610af857600080fd5b50565b600081359050610b0a81610ae4565b92915050565b600060208284031215610b2657610b25610946565b5b6000610b3484828501610afb565b91505092915050565b6000610b4882610a36565b9050919050565b610b5881610b3d565b82525050565b6000602082019050610b736000830184610b4f565b92915050565b600082825260208201905092915050565b7f596f7520686176656e74207374616b656420616e797468696e67000000000000600082015250565b6000610bc0601a83610b79565b9150610bcb82610b8a565b602082019050919050565b60006020820190508181036000830152610bef81610bb3565b9050919050565b6000604082019050610c0b6000830185610aba565b610c1860208301846109e0565b9392505050565b610c2881610a84565b8114610c3357600080fd5b50565b600081519050610c4581610c1f565b92915050565b600060208284031215610c6157610c60610946565b5b6000610c6f84828501610c36565b91505092915050565b7f43616c6c6572206d75737420626520746865206f776e65720000000000000000600082015250565b6000610cae601883610b79565b9150610cb982610c78565b602082019050919050565b60006020820190508181036000830152610cdd81610ca1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4d826109d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d7f57610d7e610d13565b5b600182019050919050565b7f43616e6e6f74207374616b65205a65726f000000000000000000000000000000600082015250565b6000610dc0601183610b79565b9150610dcb82610d8a565b602082019050919050565b60006020820190508181036000830152610def81610db3565b9050919050565b6000606082019050610e0b6000830186610aba565b610e186020830185610aba565b610e2560408301846109e0565b949350505050565b6000610e38826109d6565b9150610e43836109d6565b9250828201905080821115610e5b57610e5a610d13565b5b9291505056fea2646970667358221220eaca5b4786778762d338ed67f5406298e1d0ec8cf817b6a43aab79ddcdeff8cc64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610135578063a694fc3a14610153578063be22f5461461016f578063c93c8f341461018d578063fd5e6dd1146101bd5761009e565b80632def6620146100a357806345bc78ab146100ad5780635eb186f8146100dd57806360ab5852146100fb5780636f49712b14610105575b600080fd5b6100ab6101ed565b005b6100c760048036038101906100c291906109a9565b6103b3565b6040516100d491906109ef565b60405180910390f35b6100e56103cb565b6040516100f29190610a69565b60405180910390f35b6101036103f1565b005b61011f600480360381019061011a91906109a9565b6105db565b60405161012c9190610a9f565b60405180910390f35b61013d6105fb565b60405161014a9190610ac9565b60405180910390f35b61016d60048036038101906101689190610b10565b610621565b005b6101776108c3565b6040516101849190610b5e565b60405180910390f35b6101a760048036038101906101a291906109a9565b6108e7565b6040516101b49190610a9f565b60405180910390f35b6101d760048036038101906101d29190610b10565b610907565b6040516101e49190610ac9565b60405180910390f35b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610bd6565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102cf929190610bf6565b6020604051808303816000875af11580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103129190610c4b565b506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60046020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890610cc4565b60405180910390fd5b60005b6003805490508110156105d8576000600382815481106104a7576104a6610ce4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156105c357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161057e929190610bf6565b6020604051808303816000875af115801561059d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c19190610c4b565b505b505080806105d090610d42565b915050610484565b50565b60056020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065b90610dd6565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106c193929190610df6565b6020604051808303816000875af11580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190610c4b565b5080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107549190610e2d565b92505081905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108c0576003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900460ff1681565b6003818154811061091757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109768261094b565b9050919050565b6109868161096b565b811461099157600080fd5b50565b6000813590506109a38161097d565b92915050565b6000602082840312156109bf576109be610946565b5b60006109cd84828501610994565b91505092915050565b6000819050919050565b6109e9816109d6565b82525050565b6000602082019050610a0460008301846109e0565b92915050565b6000819050919050565b6000610a2f610a2a610a258461094b565b610a0a565b61094b565b9050919050565b6000610a4182610a14565b9050919050565b6000610a5382610a36565b9050919050565b610a6381610a48565b82525050565b6000602082019050610a7e6000830184610a5a565b92915050565b60008115159050919050565b610a9981610a84565b82525050565b6000602082019050610ab46000830184610a90565b92915050565b610ac38161096b565b82525050565b6000602082019050610ade6000830184610aba565b92915050565b610aed816109d6565b8114610af857600080fd5b50565b600081359050610b0a81610ae4565b92915050565b600060208284031215610b2657610b25610946565b5b6000610b3484828501610afb565b91505092915050565b6000610b4882610a36565b9050919050565b610b5881610b3d565b82525050565b6000602082019050610b736000830184610b4f565b92915050565b600082825260208201905092915050565b7f596f7520686176656e74207374616b656420616e797468696e67000000000000600082015250565b6000610bc0601a83610b79565b9150610bcb82610b8a565b602082019050919050565b60006020820190508181036000830152610bef81610bb3565b9050919050565b6000604082019050610c0b6000830185610aba565b610c1860208301846109e0565b9392505050565b610c2881610a84565b8114610c3357600080fd5b50565b600081519050610c4581610c1f565b92915050565b600060208284031215610c6157610c60610946565b5b6000610c6f84828501610c36565b91505092915050565b7f43616c6c6572206d75737420626520746865206f776e65720000000000000000600082015250565b6000610cae601883610b79565b9150610cb982610c78565b602082019050919050565b60006020820190508181036000830152610cdd81610ca1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4d826109d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d7f57610d7e610d13565b5b600182019050919050565b7f43616e6e6f74207374616b65205a65726f000000000000000000000000000000600082015250565b6000610dc0601183610b79565b9150610dcb82610d8a565b602082019050919050565b60006020820190508181036000830152610def81610db3565b9050919050565b6000606082019050610e0b6000830186610aba565b610e186020830185610aba565b610e2560408301846109e0565b949350505050565b6000610e38826109d6565b9150610e43836109d6565b9250828201905080821115610e5b57610e5a610d13565b5b9291505056fea2646970667358221220eaca5b4786778762d338ed67f5406298e1d0ec8cf817b6a43aab79ddcdeff8cc64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 369,
        "contract": "contracts/TokenFarm.sol:TokenFarm",
        "label": "daiToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(DaiToken)181"
      },
      {
        "astId": 372,
        "contract": "contracts/TokenFarm.sol:TokenFarm",
        "label": "dappToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(DappToken)362"
      },
      {
        "astId": 374,
        "contract": "contracts/TokenFarm.sol:TokenFarm",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 377,
        "contract": "contracts/TokenFarm.sol:TokenFarm",
        "label": "stakers",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 381,
        "contract": "contracts/TokenFarm.sol:TokenFarm",
        "label": "stakingBalance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 385,
        "contract": "contracts/TokenFarm.sol:TokenFarm",
        "label": "isStaking",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 389,
        "contract": "contracts/TokenFarm.sol:TokenFarm",
        "label": "hasStaked",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(DaiToken)181": {
        "encoding": "inplace",
        "label": "contract DaiToken",
        "numberOfBytes": "20"
      },
      "t_contract(DappToken)362": {
        "encoding": "inplace",
        "label": "contract DappToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}